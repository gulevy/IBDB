multipart.maxFileSize: 128KB
multipart.maxRequestSize: 128KB

spring.mail.host = smtp.gmail.com
spring.mail.username = ibdb.team.1@gmail.com
spring.mail.password = 23google

spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false

#  mySql properties disable if you want to work with h2

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/ibdb
spring.datasource.username = spring
spring.datasource.password = spring

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect




















##spring.profiles.active=mysql
#
### Replace with your connection string
#spring.datasource.url=jdbc:mysql://1270.0.0.1:3306/ibdb;
### Replace with your credentials
#
#spring.datasource.username=spring
#spring.datasource.password=spring
#spring.datasource.name=ibdb
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
#spring.jpa.show-sql = true
#
## Hibernate ddl auto (create, create-drop, update): with "update" the database
## schema will be automatically updated accordingly to java entities found in
## the project
#spring.jpa.hibernate.ddl-auto = update
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#


#spring.datasource.schema==classpath:/data.sql
#spring.datasource.data==classpath:/data.sql

#spring.datasource.initial-size=10
#spring.datasource.max-active=30
#spring.datasource.min-idle=5
#spring.datasource.max-idle=5
#spring.datasource.test-on-borrow=true
#spring.datasource.validation-query=select 1;
#spring.datasource.time-between-eviction-runs-millis=60000
#spring.datasource.min-evictable-idle-time-millis=30000

